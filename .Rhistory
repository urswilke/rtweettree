type = "user")
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet")
full_join(user_nodes,
tweet_nodes)
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble() %>%
# left_join(tibble(name = c(edges$from, edges$to) %>% unique(), type = "tweet")) %>%
# left_join(tibble(name = user_tweet_edges$to %>% unique(), type2 = "user")) %>%
# mutate(type = coalesce(type2, type)) %>% select(-type2)
#
left_join(bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
) %>%
left_join(df_counts) %>%
left_join(edges %>%
# filter(type %in% c("quote", "reply")) %>%
select(name = to_chr, user_id, screen_name) %>%
distinct(name, .keep_all = TRUE))
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap())
c(main_status_id, df_main_status, df_thread, df_tls, df_favs) %<-%
readRDS("~/R/fdp_filsdep/data/marquardt.rds")
df_root <-
df_main_status %>%
# df_thread %>%
# filter(status_id == main_status_id) %>%
select(to = status_id, user_id, screen_name) %>%
mutate(from = "root", type = "root")
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls, df_favs), df_root) %>%
mutate(alpha = 1)
user_tweet_edges <-
tweet_edges %>%
transmute(user_id,
screen_name,
from = to,
to = user_id,
type = "by",
alpha = .5)
fav_edges <-
df_favs %>%
filter(status_id %in% tweet_edges$to) %>%
transmute(from = status_id, to = favorited_by, user_id = favorited_by, screen_name) %>%
add_count(to, name = "n_likes") %>%
mutate(type = "like",
alpha = .1)
edges <-
list(
tweet_edges,
fav_edges,
user_tweet_edges
) %>%
reduce(full_join) %>%
rename(from_chr = from, to_chr = to)
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user")
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet")
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble() %>%
# left_join(tibble(name = c(edges$from, edges$to) %>% unique(), type = "tweet")) %>%
# left_join(tibble(name = user_tweet_edges$to %>% unique(), type2 = "user")) %>%
# mutate(type = coalesce(type2, type)) %>% select(-type2)
#
left_join(bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
) %>%
left_join(df_counts) %>%
left_join(edges %>%
# filter(type %in% c("quote", "reply")) %>%
select(name = to_chr, user_id, screen_name) %>%
distinct(name, .keep_all = TRUE))
tbl_graph(nodes, edges)
edges <-
list(
tweet_edges,
fav_edges,
user_tweet_edges
) %>%
reduce(full_join) %>%
mutate(from_chr = from, to_chr = to)
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble() %>%
# left_join(tibble(name = c(edges$from, edges$to) %>% unique(), type = "tweet")) %>%
# left_join(tibble(name = user_tweet_edges$to %>% unique(), type2 = "user")) %>%
# mutate(type = coalesce(type2, type)) %>% select(-type2)
#
left_join(bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
) %>%
left_join(df_counts) %>%
left_join(edges %>%
# filter(type %in% c("quote", "reply")) %>%
select(name = to_chr, user_id, screen_name) %>%
distinct(name, .keep_all = TRUE))
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap())
edges
edges <-
list(
df_root,
tweet_edges,
fav_edges,
user_tweet_edges
) %>%
reduce(full_join) %>%
mutate(from_chr = from, to_chr = to)
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user")
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet")
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap())
edges <-
list(
tweet_edges,
fav_edges,
user_tweet_edges
) %>%
reduce(full_join) %>%
mutate(from_chr = from, to_chr = to)
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user")
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet")
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble() %>%
# left_join(tibble(name = c(edges$from, edges$to) %>% unique(), type = "tweet")) %>%
# left_join(tibble(name = user_tweet_edges$to %>% unique(), type2 = "user")) %>%
# mutate(type = coalesce(type2, type)) %>% select(-type2)
#
left_join(bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
) %>%
left_join(df_counts) %>%
left_join(edges %>%
# filter(type %in% c("quote", "reply")) %>%
select(name = to_chr, user_id, screen_name) %>%
distinct(name, .keep_all = TRUE))
bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble() %>%
# left_join(tibble(name = c(edges$from, edges$to) %>% unique(), type = "tweet")) %>%
# left_join(tibble(name = user_tweet_edges$to %>% unique(), type2 = "user")) %>%
# mutate(type = coalesce(type2, type)) %>% select(-type2)
#
# left_join(bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
#                     tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
# ) %>%
left_join(df_counts) %>%
left_join(edges %>%
# filter(type %in% c("quote", "reply")) %>%
select(name = to_chr, user_id, screen_name) %>%
distinct(name, .keep_all = TRUE))
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble() %>%
# left_join(tibble(name = c(edges$from, edges$to) %>% unique(), type = "tweet")) %>%
# left_join(tibble(name = user_tweet_edges$to %>% unique(), type2 = "user")) %>%
# mutate(type = coalesce(type2, type)) %>% select(-type2)
#
# left_join(bind_rows(tibble(name = c(tweet_edges$from, tweet_edges$to) %>% unique(), type = "tweet"),
#                     tibble(name = c(user_tweet_edges$to, fav_edges$to) %>% unique(), type = "user"))
# ) %>%
left_join(df_counts)
edges
df <- list(df_main_status, df_thread, df_tls, df_favs) %>% bind_rows() %>% distinct(status_id, .keep_all = TRUE)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble()
user_tweet_edges
user_tweet_edges
user_tweet_edges <-
tweet_edges %>%
transmute(user_id,
screen_name,
from = to,
to = user_id,
type = "by",
alpha = .5) %>%
bind_rows(df_root)
user_tweet_edges
edges <-
list(
tweet_edges,
fav_edges,
user_tweet_edges
) %>%
reduce(full_join) %>%
mutate(from_chr = from, to_chr = to)
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user")
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet")
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble()
edges
user_tweet_edges <-
tweet_edges %>%
transmute(user_id,
screen_name,
from = to,
to = user_id,
type = "by",
alpha = .5)
user_tweet_edges
df_root
tweet_edges
df_root
df_root <-
df_main_status %>%
# df_thread %>%
# filter(status_id == main_status_id) %>%
select(to = status_id, user_id, screen_name) %>%
mutate(from = screen_name, type = "root")
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls, df_favs), df_root) %>%
mutate(alpha = 1)
df_root <-
df_main_status %>%
# df_thread %>%
# filter(status_id == main_status_id) %>%
select(to = status_id, user_id, screen_name) %>%
mutate(from = "root", type = "root")
df_root
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls, df_favs), df_root) %>%
mutate(alpha = 1)
df_root
user_tweet_edges
user_tweet_edges <-
tweet_edges %>%
bind_rows(df_root %>% mutate(from = screen_name)) %>%
transmute(user_id,
screen_name,
from = to,
to = user_id,
type = "by",
alpha = .5)
user_tweet_edges
fav_edges <-
df_favs %>%
filter(status_id %in% tweet_edges$to) %>%
transmute(from = status_id, to = favorited_by, user_id = favorited_by, screen_name) %>%
add_count(to, name = "n_likes") %>%
mutate(type = "like",
alpha = .1)
edges <-
list(
tweet_edges,
fav_edges,
user_tweet_edges
) %>%
reduce(full_join) %>%
mutate(from_chr = from, to_chr = to)
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user")
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet")
nodes <- full_join(user_nodes,
tweet_nodes)
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble()
nodes <-
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble()
g <- tbl_graph(nodes, edges)
g %>%
# mutate(node_is_source()) %>%
ggraph('circlepack', circular = T) +
geom_node_circle(aes(fill = dist_to_center), n = 50) +
# geom_edge_link(data = edges_20 %>% as_tbl_graph()) +
scale_fill_viridis_c(direction = -1) +
coord_fixed()
g1 <- g %>% ggraph()
g1$data$onclick  <-
g1$data %>%
as_tibble() %>%
transmute(case_when(type == "tweet" ~ glue::glue('window.open("https://twitter.com/{g1$data$screen_name}/status/{g1$data$name}")'),
type == "user"  ~ glue::glue('window.open("https://twitter.com/{g1$data$screen_name}/")'))) %>%
pull()
g1 <- g %>% ggraph()
g1$data
g1$data$onclick  <-
g1$data %>%
as_tibble() %>%
transmute(case_when(type == "tweet" ~ glue::glue('window.open("https://twitter.com/{g1$data$screen_name}/status/{g1$data$name}")'),
type == "user"  ~ glue::glue('window.open("https://twitter.com/{g1$data$screen_name}/")'))) %>%
pull()
g1$data %>%
as_tibble()
nodes <- full_join(user_nodes,
tweet_nodes)
nodes
user_nodes
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user") %>%
left_join(df %>% select(name = user_id, screen_name))
user_nodes
user_nodes <-
tibble(name =
c(df_root$user_id,
user_tweet_edges$user_id) %>%
unique(),
type = "user") %>%
left_join(df %>% select(name = user_id, screen_name) %>% distinct())
user_nodes
tweet_nodes
tweet_nodes <-
tibble(name =
c(tweet_edges$to,
tweet_edges$from) %>%
unique(),
type = "tweet") %>%
left_join(df %>% select(name = status_id, screen_name) %>% distinct())
tweet_nodes
nodes <- full_join(user_nodes,
tweet_nodes)
nodes <-
tbl_graph(nodes, edges) %>%
mutate(dist_to_center = node_distance_from(node_is_source()),
group = group_infomap()) %>%
group_by(group) %>%
mutate(n_group = n()) %>%
ungroup() %>%
as_tibble()
g <- tbl_graph(nodes, edges)
g %>%
# mutate(node_is_source()) %>%
ggraph('circlepack', circular = T) +
geom_node_circle(aes(fill = dist_to_center), n = 50) +
# geom_edge_link(data = edges_20 %>% as_tbl_graph()) +
scale_fill_viridis_c(direction = -1) +
coord_fixed()
g1 <- g %>% ggraph()
g1$data$onclick  <-
g1$data %>%
as_tibble() %>%
transmute(case_when(type == "tweet" ~ glue::glue('window.open("https://twitter.com/{g1$data$screen_name}/status/{g1$data$name}")'),
type == "user"  ~ glue::glue('window.open("https://twitter.com/{g1$data$screen_name}/")'))) %>%
pull()
g1$data$y[g1$data$type == "user"] <- min(g1$data$y)
g1 +
geom_edge_diagonal(aes(color= type)) +
geom_node_point(aes(color = dist_to_center,
shape = type)) +
ggforce::geom_mark_hull(aes(x = g1$data$x,
y = g1$data$y,
filter = type == 'user',
label = "user")
)
g2 <- g1 +
geom_edge_diagonal(aes(color= type, alpha = alpha)) +
ggforce::geom_mark_rect(aes(x = g1$data$x,
y = g1$data$y,
# filter = type == 'user',
color = g1$data$type)
) +
ggiraph::geom_point_interactive(aes(x=g1$data$x,
y = g1$data$y,
color = type,
data_id = g1$data$user_id,
tooltip = g1$data$user_id,
onclick = g1$data$onclick),
size = 3)
ggiraph::girafe(ggobj = g2,
options = list(
ggiraph::opts_zoom(min = 0.3, max = 5))
)
ggiraph::girafe(ggobj = g2,
options = list(
ggiraph::opts_zoom(min = 0.3, max = 5))
)
g1$data %>%
as_tibble()
g1 <- g %>% ggraph()
g2 <- g1 +
geom_edge_diagonal(aes(color= type, alpha = alpha)) +
ggforce::geom_mark_rect(aes(x = g1$data$x,
y = g1$data$y,
# filter = type == 'user',
color = g1$data$type)
) +
ggiraph::geom_point_interactive(aes(x=g1$data$x,
y = g1$data$y,
color = type,
data_id = g1$data$user_id
# ,
# tooltip = g1$data$user_id,
# onclick = g1$data$onclick
),
size = 3)
ggiraph::girafe(ggobj = g2,
options = list(
ggiraph::opts_zoom(min = 0.3, max = 5))
)
source('~/R/threadnet/test_graph.R', echo=TRUE)
g1$data$name
