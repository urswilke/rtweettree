library(usethis)
library(roxygen2)
library(devtools)
use_git_config(user.name = "urswilke", user.email = "urs.wilke@gmail.com")
use_git()
use_readme_rmd()
library(usethis)
library(roxygen2)
library(devtools)
use_readme_rmd()
use_mit_license("Urs Wilke")
usethis::use_mit_license("Urs Wilke")
library(threadnet)
use_testthat()
detach("package:devtools", unload = TRUE)
use_testthat()
use_vignette("scrape_thread")
use_package("rtweet")
use_pipe()
library(threadnet)
use_pipe()
use_package("dplyr")
use_package("stringr")
use_package("purrr")
devtools::install()
use_r("scraping")
source('~/R/threadnet/R/scraping.R', echo=TRUE)
library(threadnet)
library(threadnet)
devtools::install()
rm(search_thread)
devtools::install()
library(threadnet)
example("search_thread")
example("search_thread")
devtools::install()
example("search_thread")
library(threadnet)
example("search_thread")
df_main_status
df_thread <- search_thread(main_status_id)
devtools::install()
library(threadnet)
example("search_thread")
example("search_thread")
devtools::check()
devtools::check()
devtools::check()
devtools::install()
library(threadnet)
example("search_thread")
library(threadnet)
example("search_thread")
View(df_thread)
library(threadnet)
devtools::install()
example("search_thread")
threadnet::()
example("find_connections_rec")
View(df_tls)
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),
df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root"))
dplyr::bind_rows(df_thread, df_tls)
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),
df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root"))
traceback()
library(threadnet)
devtools::install()
devtools::install()
example("find_connections_rec")
traceback()
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),
df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root"))
df_main_status %>%
dplyr::filter(status_id == main_status_id)
df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),
df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root"))
traceback()
find_connections_rec <- function(df_thread, df_main_status) {
df_quote1 <-
df_thread %>%
filter(quoted_status_id %in% df_main_status$to) %>%
select(to = status_id, from = quoted_status_id, user_id) %>%
mutate(type = "quote")
df_reply1 <-
df_thread %>%
filter(reply_to_status_id %in% df_main_status$to) %>%
select(to = status_id, from = reply_to_status_id, user_id) %>%
mutate(type = "reply")
res <- list(df_main_status, df_reply1, df_quote1) %>%
reduce(full_join) %>%
distinct()
if (nrow(res) == nrow(df_main_status)) {
return(res %>%
filter(from != "root"))
} else {
find_connections_rec(df_thread, res)
}
}
df0df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
df0 <- df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
df0
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),df0)
df_thread %>% names
df_tls <- scrape_timelines(thread_ids)
warnings()
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),df0)
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),df0)
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),df0)
traceback()
find_connections_rec(dplyr::bind_rows(df_thread, df_tls),df0)
dplyr::bind_rows(df_thread, df_tls)
df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
tweet_edges <-
find_connections_rec(bind_rows(df_thread, df_tls),
df0 = df_main_status %>%
filter(status_id == main_status_id) %>%
select(to = status_id, user_id) %>%
mutate(from = "root", type = "root"))
tweet_edges <-
find_connections_rec(bind_rows(df_thread, df_tls),
df_main_status %>%
filter(status_id == main_status_id) %>%
select(to = status_id, user_id) %>%
mutate(from = "root", type = "root"))
library(tidyverse)
tweet_edges <-
find_connections_rec(bind_rows(df_thread, df_tls),
df_main_status %>%
filter(status_id == main_status_id) %>%
select(to = status_id, user_id) %>%
mutate(from = "root", type = "root"))
View(tweet_edges)
library(threadnet)
devtools::install()
rm(find_connections_rec())
rm(find_connections_rec)
tweet_edges <-
find_connections_rec(bind_rows(df_thread, df_tls),
df_main_status %>%
filter(status_id == main_status_id) %>%
select(to = status_id, user_id) %>%
mutate(from = "root", type = "root"))
df0 <- df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls), df0)
#' df_main_status <- rtweet::lookup_statuses(main_status_id)
#' df_thread <- search_thread(main_status_id)
#' thread_ids <- df_thread$user_id %>% unique()
#' df_tls <- scrape_timelines(thread_ids)
#'df0 <- df_main_status %>%
#'                        dplyr::filter(status_id == main_status_id) %>%
#'                        dplyr::select(to = status_id, user_id) %>%
#'                        dplyr::mutate(from = "root", type = "root")
#' tweet_edges <-
#' find_connections_rec(dplyr::bind_rows(df_thread, df_tls), df0)
find_connections_rec <- function(df_thread, df0 = df_main_status) {
df_quote1 <-
df_thread %>%
filter(quoted_status_id %in% df0$to) %>%
select(to = status_id, from = quoted_status_id, user_id) %>%
mutate(type = "quote")
df_reply1 <-
df_thread %>%
filter(reply_to_status_id %in% df0$to) %>%
select(to = status_id, from = reply_to_status_id, user_id) %>%
mutate(type = "reply")
res <- list(df0, df_reply1, df_quote1) %>%
reduce(full_join) %>%
distinct()
if (nrow(res) == nrow(df0)) {
return(res %>%
filter(from != "root"))
} else {
find_connections_rec(df_thread, res)
}
}
df0 <- df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls), df0)
example("scrape_favs2")
rl <- rtweet::rate_limit("get_favorites")
rl <- rtweet::rate_limit("get_favorites")
rl
rl <- rtweet::rate_limit("get_favorites")
rl
rl <- rtweet::rate_limit("get_timeline")
rl
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
print(paste0("Index: ", i,
"Scraped ", nrow(l[[i]]),
" tweets. Remaining: ", rl[["remaining"]]))
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
# }
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(df)
df
}
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
l_tls <- spliced_list %>% map(~thread_ids[.x]) %>% imap(~load_slowly(.x, .y))
# if (save_res == TRUE) {
#   save_name <- paste0(df_main_status$screen_name,
#                       "_",
#                       str_sub(df_main_status$text, end = 15),
#                       "_tls.rds")
#   saveRDS(l_tls, save_name)
}
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
print(paste0("Index: ", i,
"Scraped ", nrow(l[[i]]),
" tweets. Remaining: ", rl[["remaining"]]))
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
# }
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(df)
df
}
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
l_tls <- spliced_list %>% map(~thread_ids[.x]) %>% imap(~load_slowly(.x, .y))
# if (save_res == TRUE) {
#   save_name <- paste0(df_main_status$screen_name,
#                       "_",
#                       str_sub(df_main_status$text, end = 15),
#                       "_tls.rds")
#   saveRDS(l_tls, save_name)
}
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
print(paste0("Index: ", i,
"Scraped ", nrow(l[[i]]),
" tweets. Remaining: ", rl[["remaining"]]))
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
}
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(df)
df
}
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
print(paste0("Index: ", i,
"Scraped ", nrow(l[[i]]),
" tweets. Remaining: ", rl[["remaining"]]))
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
}
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(df)
df
# }
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
l_tls <- spliced_list %>% map(~thread_ids[.x]) %>% imap(~load_slowly(.x, .y))
# if (save_res == TRUE) {
#   save_name <- paste0(df_main_status$screen_name,
#                       "_",
#                       str_sub(df_main_status$text, end = 15),
#                       "_tls.rds")
#   saveRDS(l_tls, save_name)
# }
l_tls %>% bind_rows()
}
df_tls <- scrape_timelines(thread_ids)
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
print(paste0("Index: ", index,
"Scraped ", nrow(l[[index]]),
" tweets. Remaining: ", rl[["remaining"]]))
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
}
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(df)
df
# }
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
l_tls <- spliced_list %>% map(~thread_ids[.x]) %>% imap(~load_slowly(.x, .y))
# if (save_res == TRUE) {
#   save_name <- paste0(df_main_status$screen_name,
#                       "_",
#                       str_sub(df_main_status$text, end = 15),
#                       "_tls.rds")
#   saveRDS(l_tls, save_name)
# }
l_tls %>% bind_rows()
}
df_tls <- scrape_timelines(thread_ids)
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
}
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(paste0("Index: ", index,
"Scraped ", nrow(df),
" tweets. Remaining: ", rl[["remaining"]]))
print(df)
df
# }
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
l_tls <- spliced_list %>% map(~thread_ids[.x]) %>% imap(~load_slowly(.x, .y))
# if (save_res == TRUE) {
#   save_name <- paste0(df_main_status$screen_name,
#                       "_",
#                       str_sub(df_main_status$text, end = 15),
#                       "_tls.rds")
#   saveRDS(l_tls, save_name)
# }
l_tls %>% bind_rows()
}
scrape_timelines <- function(thread_ids, save_res = TRUE) {
safe_tl <- possibly(rtweet::get_timelines, otherwise = NULL)
load_slowly <- function(thread_ids, index) {
rl <- rtweet::rate_limit("get_timeline")
# rl <- rtweet::rate_limit("get_favorites")
if (rl[["remaining"]] <= 2) {
print(paste0("Rate limit reached. Resuming at ", rl[["reset_at"]]))
Sys.sleep(as.numeric(rl[["reset"]], "secs") + 1)
}
# print(paste0("wait at ", Sys.time(), "; index: ", index))
# if (index != 1) {
#   Sys.sleep(15*60)
df <- safe_tl(thread_ids,
since_id = main_status_id,
n = 3200)
print(paste0("Index: ", index,
"Scraped ", nrow(df),
" tweets. Remaining: ", rl[["remaining"]]))
print(df)
df
}
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
l_tls <- spliced_list %>% map(~thread_ids[.x]) %>% imap(~load_slowly(.x, .y))
# if (save_res == TRUE) {
#   save_name <- paste0(df_main_status$screen_name,
#                       "_",
#                       str_sub(df_main_status$text, end = 15),
#                       "_tls.rds")
#   saveRDS(l_tls, save_name)
# }
l_tls %>% bind_rows()
}
df_tls <- scrape_timelines(thread_ids)
rl <- rtweet::rate_limit("get_timeline")
rl
library(threadnet)
devtools::install()
rm(find_connections_rec)
rm(scrape_timelines)
main_status_id <- "1234620900386975744"
df_main_status <- rtweet::lookup_statuses(main_status_id)
df_thread <- search_thread(main_status_id)
thread_ids <- df_thread$user_id %>% unique()
df_tls <- scrape_timelines(thread_ids)
df0 <- df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls), df0)
ids <- tweet_edges$user_id %>% unique()
df_favs <- scrape_favs2(ids)
rl
rl[["limit"]]
rl[["remaining"]]
c(1, NA)
c(1, NA) %>% na.omit()
c(1, NA) %>% na.omit(.)
c(1, NA) %>% na.omit(c(1,NA))
c("1", NA) %>% na.omit(c(1,NA)) %>% as.numeric()
c("1", NA) %>% na.omit(c(1,NA)) %>% as.character()
spliced_list <- seq(0, length(thread_ids), 179) %>% map(~.x + 1:179)
spliced_list
spliced_list %>% map(~thread_ids[.x])
library(threadnet)
devtools::install()
df_tls <- scrape_timelines(thread_ids)
df0 <- df_main_status %>%
dplyr::filter(status_id == main_status_id) %>%
dplyr::select(to = status_id, user_id) %>%
dplyr::mutate(from = "root", type = "root")
tweet_edges <-
find_connections_rec(dplyr::bind_rows(df_thread, df_tls), df0)
ids <- tweet_edges$user_id %>% unique()
df_favs <- scrape_favs2(ids)
View(df_favs)
devtools::check()
library(threadnet)
devtools::install()
devtools::check()
devtools::install()
library(threadnet)
devtools::install()
