% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.R
\name{create_tweet_tbl_graph}
\alias{create_tweet_tbl_graph}
\title{Create a tidygraph tbl_graph object representing the tree structure of a
tweet and all replies, quotes and likes that could be scraped using rtweet.}
\usage{
create_tweet_tbl_graph(df_main_status, df_tree, df_tls, df_favs)
}
\arguments{
\item{df_main_status}{Data frame resulting of `rtweet::lookup_statuses(main_status_id)`.}

\item{df_tree}{Data frame resulting of `search_tree(main_status_id)`.}

\item{df_tls}{Data frame resulting of `scrape_timelines(unique(df_tree$user_id))`.}

\item{df_favs}{Data frame resulting of `find_connections_rec()` of the involved user ids (see example).}
}
\value{
A tidygraph tbl_graph object representing the tree structure of all scraped subtweets of the tweet.
}
\description{
Create a tidygraph tbl_graph object representing the tree structure of a
tweet and all replies, quotes and likes that could be scraped using rtweet.
}
\examples{
\dontrun{
main_status_id <- "1289565453707173889"
df_main_status <- rtweet::lookup_statuses(main_status_id)
df_tree <- search_tree(main_status_id)
tree_ids <- df_tree$user_id \%>\% unique()
df_tls <- scrape_timelines(tree_ids)
df0 <- df_main_status \%>\%
  dplyr::filter(status_id == main_status_id) \%>\%
  dplyr::select(to = status_id, user_id) \%>\%
  dplyr::mutate(from = "root", type = "root")
tweet_edges <-
  find_connections_rec(dplyr::bind_rows(df_tree, df_tls), df0)
ids <- tweet_edges$user_id \%>\% unique()
df_favs <- scrape_favs2(ids, main_status_id)
}
}
