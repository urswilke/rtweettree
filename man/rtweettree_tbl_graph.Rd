% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rtweettree_tbl_graph.R
\name{rtweettree_tbl_graph}
\alias{rtweettree_tbl_graph}
\alias{rtweettree_tbl_graph.rtweettree_data}
\alias{rtweettree_tbl_graph.rtweettree_tbl_graph}
\alias{rtweettree_tbl_graph.character}
\title{Create a tidygraph tbl_graph object}
\usage{
rtweettree_tbl_graph(x, add_profile_pics = TRUE, ...)

\method{rtweettree_tbl_graph}{rtweettree_data}(x, add_profile_pics = TRUE, ...)

\method{rtweettree_tbl_graph}{rtweettree_tbl_graph}(x, add_profile_pics = TRUE, ...)

\method{rtweettree_tbl_graph}{character}(x, add_profile_pics = TRUE, ...)
}
\arguments{
\item{x}{rtweet status_id or rtweettree_data object}

\item{add_profile_pics}{logical whether to scrape the profile pictures of the
twitter users and add them to the nodes tibble (if available); defaults to
TRUE.}

\item{...}{for the moment not used}
}
\value{
A tidygraph tbl_graph object representing the tree structure of all scraped subtweets of the tweet.
}
\description{
Create a `tidygraph::tbl_graph` object representing the tree structure of a
tweet and all replies, quotes and likes that could be scraped using rtweet.
}
\section{Methods (by class)}{
\itemize{
\item \code{rtweettree_data}: Construct rtweettree_tbl_graph object from rtweettree_data.

\item \code{rtweettree_tbl_graph}: return rtweettree_tbl_graph object as is.

\item \code{character}: First run rtweettree_data on the status id `x` and then transform to rtweettree tbl_graph.
}}

\examples{
\dontrun{
main_status_id <- "1438481824922181635"
df_main_status <- rtweet::lookup_statuses(main_status_id)
df_tree <- search_tree(main_status_id)
tree_ids <- df_tree$user_id \%>\% unique()
df_tls <- scrape_timelines(tree_ids)
df0 <- df_main_status \%>\%
  dplyr::filter(status_id == main_status_id) \%>\%
  dplyr::select(to = status_id, user_id) \%>\%
  dplyr::mutate(from = "root", type = "root")
tweet_edges <-
  find_connections_rec(dplyr::bind_rows(df_tree, df_tls), df0)
ids <- tweet_edges$user_id \%>\% unique()
df_favs <- scrape_favs2(ids, main_status_id)
tweet_ids <- list(df_tls, df_favs, df_main_status) \%>\%
  dplyr::bind_rows() \%>\%
  pull(status_id) \%>\%
  unique()
df_retweets <- tweet_ids \%>\% purrr::map_dfr(~rtweet::get_retweets(.x))

rtweettree_data_scraped <- tibble::lst(df_main_status, df_tree, df_tls, df_favs, df_retweets)
g <- rtweettree_tbl_graph(rtweettree_data_scraped)
g \%>\% ggraph::ggraph() + ggraph::geom_node_point() + ggraph::geom_edge_link()
}
}
